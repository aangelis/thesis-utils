// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// https://www.prisma.io/docs/concepts/components/prisma-schema/data-model

model User {
  id Int @id @default(autoincrement())
  email String @unique
  username String @unique
  first_name String? @db.VarChar(100)
  last_name String? @db.VarChar(100)
  name_el String? @db.VarChar(100)
  name_en String? @db.VarChar(100)
  surname_el String? @db.VarChar(100)
  surname_en String? @db.VarChar(100)
  father_name_el String? @db.VarChar(100)
  father_name_en String? @db.VarChar(100)
  department String? @db.VarChar(100)
  title String? @db.VarChar(100)
  title_ldap String? @db.VarChar(100)
  is_staff Boolean? @default(false)
  is_active Boolean? @default(true)
  is_superuser Boolean? @default(false)
  last_login DateTime?
  date_joined DateTime @default(now())
  deposits Deposit[]
  permissions Permission[]
}

model Deposit {
  id Int @id @default(autoincrement())
  title String @db.VarChar(500)
  title_el String @db.VarChar(500)
  title_en String @db.VarChar(500)
  content String?
  abstract_el String?
  abstract_en String?
  keywords_el String?
  keywords_en String?
  pages Int @default(0)
  language String @db.VarChar(50)
  images Int @default(0)
  tables Int @default(0)
  diagrams Int @default(0)
  maps Int @default(0)
  drawings Int @default(0)	
  confirmed Boolean @default(false)
  confirmed_timestamp DateTime?
  license String @db.VarChar(100)
  comments String?
  submitter User @relation(fields: [submitter_id], references: [id])
  submitter_id Int
  submitter_department String?
  submitter_title String?
  supervisor String? @db.VarChar(100)
  new_filename String?
  original_filename String?
  date_created DateTime @default(now())
  date_uploaded DateTime?
}

model Role {
  id Int @id @default(autoincrement())
  email String @unique
  is_admin Boolean @default(false)
  is_secretary Boolean @default(false)
  is_librarian Boolean @default(false)
  is_active Boolean @default(false)
}

model Permission {
  id  Int @id @default(autoincrement())
  submitter_email String
  due_to DateTime
  secretary User @relation(fields: [secretary_id], references: [id])
  secretary_id Int
}